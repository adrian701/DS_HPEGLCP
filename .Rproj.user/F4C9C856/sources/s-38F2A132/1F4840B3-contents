---
title: "Introduction to Predicting Demand for Bike-Sharing"
description: |
  A brief overview of the Bike-Sharing Data.
author:
  - name: Adrian Esparza
date: 2022-04-20
preview: BikeShare_image.png
categories:
  - tutorial
  - data cleaning
  - EDA
output:
  distill::distill_article:
    self_contained: false
    #includes: 
    #  in_header: ../../labs/00-lab-deck.html
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)

```
<center>
![Slides](img/00_brownbag_lab.png){#id .class width=65% height=65%}
</center>


![Slide](https://github.com/adrian701/DS_HPEGLCP/blob/main/labs/00-lab-deck.html)


* [Link to be added ]


```{r read_df, warning=FALSE, message=FALSE}

bike_df <- read.csv("/Users/aesparza/Documents/Bike-Sharing/train.csv", header = T, stringsAsFactors = F)

#datatable(bike_df, class = 'cell-border stripe', rownames = FALSE)
```


## Understanding our data!

We will be using [R](https://www.r-project.org/) on this blog while having support for python via [Google Colab](https://colab.research.google.com/drive/13Z1r_c23UXxDCd99-RIArOcbxE2yz3Xg?usp=sharing). We have many open-source tools at our disposal and will use a host of libraries to make our lives easier. 

```{r describe, warning=FALSE, message=FALSE, echo=TRUE}
library(DT)
library(skimr)

datatable(bike_df, class = 'cell-border stripe', rownames = FALSE)

skim(bike_df)

```


### Covering the basics 

![Correlation Analysis Basics](img/correlation_basics.png){#id .class width=100% height=100%}

### Correlation plot for our data
```{r correlation,  warning=FALSE, message=FALSE, echo=TRUE}

library(ggplot2)
library(tidyverse)
library(Hmisc)

cors <- function(df) {
  M <- Hmisc::rcorr(as.matrix(df[,-1]))
  Mdf <- map(M, ~data.frame(.x))
  return(Mdf)
}

formatted_cors <- function(df){
  cors(df[,-1]) %>%
    map(~rownames_to_column(.x, var="measure1")) %>%
    map(~pivot_longer(.x, -measure1, "measure2")) %>%
    bind_rows(.id = "id") %>%
    pivot_wider(names_from = id, values_from = value) %>%
    rename(p = P) %>%
    mutate(sig_p = ifelse(p < .05, T, F),
           p_if_sig = ifelse(sig_p, p, NA),
           r_if_sig = ifelse(sig_p, r, NA)) 
}


## use graphics in ggplot2 to make the pretty correlation plot
formatted_cors(bike_df) %>%
  ggplot(aes(measure1, measure2, fill=r, label=round(r_if_sig,2))) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation", title="Correlations in Bike-Sharing Data",
       subtitle="Only significant Pearson's correlation coefficients shown") +
  scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
  geom_text() +
  theme_classic() +
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0)) +
  theme(text=element_text(family="Roboto"))

```
